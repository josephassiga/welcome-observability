apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: observability-custom-metrics
  template: custom-metrics
metadata:
  annotations:
    description: |-
      Un exemple d'implémentation de métriques personnalisées, voire  https://github.com/josephassiga/welcome-observability/blob/main/README.md.

      WARNING: Cette application n'est que utilisées à titre d'exemple, pour toutes création de métriques complexes, voire le package prometheus-net
    iconClass: icon-dotnet
    tags: .NETCOre,.NET,C#,Csharp
  name: observability-custom-metrics
  namespace: openshift
objects:

# SERVICE.
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        app.openshift.io/vcs-uri: ${APP_REPO}
        openshift.io/generated-by: OpenShiftWebConsole
      labels:
        app: ${APPLICATION_NAME}
        app.kubernetes.io/component: ${APPLICATION_NAME}
        app.kubernetes.io/instance: ${APPLICATION_NAME}
        app.kubernetes.io/name: ${APPLICATION_NAME}
        app.kubernetes.io/part-of: ${APPLICATION_NAME}
        app.openshift.io/runtime: dotnet
        app.openshift.io/runtime-version: 6.0-ubi8
      name: ${APPLICATION_NAME}
      namespace: ${PROJECT_NAME}
    spec:
      ports:
      - name: 8080-tcp
        port: 8080
        protocol: TCP
        targetPort: 8080
      selector:
        app: ${APPLICATION_NAME}
        deploymentconfig: ${APPLICATION_NAME}
      sessionAffinity: None
      type: ClusterIP

# DEPLOYMENT.
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        alpha.image.policy.openshift.io/resolve-names: '*'
        app.openshift.io/route-disabled: "false"
        app.openshift.io/vcs-uri: ${APP_REPO}
        openshift.io/generated-by: OpenShiftWebConsole
      labels:
        app: ${APPLICATION_NAME}
        app.kubernetes.io/component: ${APPLICATION_NAME}
        app.kubernetes.io/instance: ${APPLICATION_NAME}
        app.kubernetes.io/name: ${APPLICATION_NAME}
        app.kubernetes.io/part-of: ${APPLICATION_NAME}
        app.openshift.io/runtime: dotnet
        app.openshift.io/runtime-version: 6.0-ubi8
      name: ${APPLICATION_NAME}
      namespace: ${PROJECT_NAME}
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: ${APPLICATION_NAME}
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          labels:
            app: ${APPLICATION_NAME}
            deploymentconfig: ${APPLICATION_NAME}
        spec:
          containers:
          - image: ${OCP_REGISTRY}/${PROJECT_NAME}/${APPLICATION_NAME}:${ENV_TAG}
            imagePullPolicy: Always
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8080
              protocol: TCP

# BUILDCONFIG.
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      annotations:
        app.openshift.io/vcs-uri: ${APP_REPO}
        openshift.io/generated-by: OpenShiftWebConsole
      labels:
        app: observability
        app.kubernetes.io/component: observability
        app.kubernetes.io/instance: observability
        app.kubernetes.io/name: observability
        app.kubernetes.io/part-of: observability
        app.openshift.io/runtime: dotnet
        app.openshift.io/runtime-version: 6.0-ubi8
      name: ${PROJECT_NAME}
      namespace: ${PROJECT_NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${PROJECT_NAME}:${ENV_TAG}
      runPolicy: Serial
      source:
        contextDir: /
        git:
          uri: ${APP_REPO}
        type: Git
      strategy:
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: dotnet:6.0-ubi8
            namespace: openshift
        type: Source
      triggers:
      - imageChange: {}
        type: ImageChange
      - type: ConfigChange

# IMAGESTREAM.
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      annotations:
        app.openshift.io/vcs-uri: ${APP_REPO}
        openshift.io/generated-by: OpenShiftWebConsole
      labels:
        app: observability
        app.kubernetes.io/component: observability
        app.kubernetes.io/instance: observability
        app.kubernetes.io/name: observability
        app.kubernetes.io/part-of: observability
        app.openshift.io/runtime: dotnet
        app.openshift.io/runtime-version: 6.0-ubi8
      name: observability
      namespace: ${PROJECT_NAME}
    spec:
      lookupPolicy:
        local: false

# ROUTE.
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      annotations:
        openshift.io/host.generated: "true"
      labels:
        app: ${APPLICATION_NAME}
        app.kubernetes.io/component: ${APPLICATION_NAME}
        app.kubernetes.io/instance: ${APPLICATION_NAME}
        app.kubernetes.io/name: ${APPLICATION_NAME}
        app.kubernetes.io/part-of: ${APPLICATION_NAME}
        app.openshift.io/runtime: dotnet
        app.openshift.io/runtime-version: 6.0-ubi8
      name: ${APPLICATION_NAME}
      namespace: ${PROJECT_NAME}
    spec:
      port:
        targetPort: 8080-tcp
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${APPLICATION_NAME}
        weight: 100


# PARAMETERS
parameters:
  - description: Project Name.
    name: PROJECT_NAME
    required: true
  - description: Application Name.
    name: APPLICATION_NAME
    value: 'observability'
  - description: OCP Registry
    name: OCP_REGISTRY
    value: image-registry.openshift-image-registry.svc:5000
  - description: Image Tag of the envinronment
    name: ENV_TAG
    value: 'v1'
  - description: Application Repository
    name: APP_REPO
    value: 'https://github.com/josephassiga/welcome-observability.git'
